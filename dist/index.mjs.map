{"version":3,"file":"index.mjs","sources":["../src/lib/constants.ts","../src/lib/Cron.ts","../../utilities/dist/index.mjs","../src/lib/Duration.ts","../src/lib/DurationFormatter.ts","../src/lib/TimerManager.ts","../src/lib/Timestamp.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/naming-convention */\nimport type { DurationFormatAssetsTime } from './DurationFormatter';\n\n/**\n * The supported time types\n */\nexport const enum TimeTypes {\n\tSecond = 'second',\n\tMinute = 'minute',\n\tHour = 'hour',\n\tDay = 'day',\n\tWeek = 'week',\n\tMonth = 'month',\n\tYear = 'year'\n}\n\nexport const enum Time {\n\tMillisecond = 1,\n\tSecond = 1000,\n\tMinute = 1000 * 60,\n\tHour = 1000 * 60 * 60,\n\tDay = 1000 * 60 * 60 * 24,\n\tMonth = 1000 * 60 * 60 * 24 * (365 / 12),\n\tYear = 1000 * 60 * 60 * 24 * 365\n}\n\nexport const days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n\nexport const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n\nexport const tokens = new Map<string, number>([\n\t['Y', 4],\n\t['Q', 1],\n\t['M', 4],\n\t['D', 4],\n\t['d', 4],\n\t['X', 1],\n\t['x', 1],\n\t['H', 2],\n\t['h', 2],\n\t['a', 1],\n\t['A', 1],\n\t['m', 2],\n\t['s', 2],\n\t['S', 3],\n\t['Z', 2],\n\t['l', 4],\n\t['L', 4],\n\t['T', 1],\n\t['t', 1]\n]);\n\nexport const partRegex = /^(?:(\\*)|(\\d+)(?:-(\\d+))?)(?:\\/(\\d+))?$/;\n\nexport const wildcardRegex = /\\bh\\b|\\B\\?\\B/g;\n\nexport const allowedNum = [\n\t[0, 59],\n\t[0, 23],\n\t[1, 31],\n\t[1, 12],\n\t[0, 6]\n];\n\nexport const predefined = {\n\t'@annually': '0 0 1 1 *',\n\t'@yearly': '0 0 1 1 *',\n\t'@monthly': '0 0 1 * *',\n\t'@weekly': '0 0 * * 0',\n\t'@daily': '0 0 * * *',\n\t'@hourly': '0 * * * *'\n} as const;\n\nexport const cronTokens = {\n\tjan: 1,\n\tfeb: 2,\n\tmar: 3,\n\tapr: 4,\n\tmay: 5,\n\tjun: 6,\n\tjul: 7,\n\taug: 8,\n\tsep: 9,\n\toct: 10,\n\tnov: 11,\n\tdec: 12,\n\tsun: 0,\n\tmon: 1,\n\ttue: 2,\n\twed: 3,\n\tthu: 4,\n\tfri: 5,\n\tsat: 6\n} as const;\n\nexport const tokensRegex = new RegExp(Object.keys(cronTokens).join('|'), 'g');\n\nexport const DEFAULT_UNITS: DurationFormatAssetsTime = {\n\t[TimeTypes.Year]: {\n\t\t1: 'year',\n\t\tDEFAULT: 'years'\n\t},\n\t[TimeTypes.Month]: {\n\t\t1: 'month',\n\t\tDEFAULT: 'months'\n\t},\n\t[TimeTypes.Week]: {\n\t\t1: 'week',\n\t\tDEFAULT: 'weeks'\n\t},\n\t[TimeTypes.Day]: {\n\t\t1: 'day',\n\t\tDEFAULT: 'days'\n\t},\n\t[TimeTypes.Hour]: {\n\t\t1: 'hour',\n\t\tDEFAULT: 'hours'\n\t},\n\t[TimeTypes.Minute]: {\n\t\t1: 'minute',\n\t\tDEFAULT: 'minutes'\n\t},\n\t[TimeTypes.Second]: {\n\t\t1: 'second',\n\t\tDEFAULT: 'seconds'\n\t}\n};\n","/* eslint-disable @typescript-eslint/restrict-plus-operands */\nimport { range } from '@sapphire/utilities';\nimport { allowedNum, cronTokens, partRegex, predefined, Time, tokensRegex, wildcardRegex } from './constants';\n\n/**\n * Handles Cron strings and generates dates based on the cron string provided.\n * @see https://en.wikipedia.org/wiki/Cron\n */\nexport class Cron {\n\tpublic cron: string;\n\tpublic normalized: string;\n\tpublic minutes: number[];\n\tpublic hours: number[];\n\tpublic days: number[];\n\tpublic months: number[];\n\tpublic dows: number[];\n\n\t/**\n\t * @param cron The cron pattern to use\n\t */\n\tpublic constructor(cron: string) {\n\t\tthis.cron = cron.toLowerCase();\n\t\tthis.normalized = Cron.normalize(this.cron);\n\t\t[this.minutes, this.hours, this.days, this.months, this.dows] = Cron.parseString(this.normalized);\n\t}\n\n\t/**\n\t * Get the next date that matches with the current pattern\n\t * @param outset The Date instance to compare with\n\t * @param origin Whether this next call is origin\n\t */\n\tpublic next(outset: Date = new Date(), origin = true): Date {\n\t\tif (!this.days.includes(outset.getUTCDate()) || !this.months.includes(outset.getUTCMonth() + 1) || !this.dows.includes(outset.getUTCDay())) {\n\t\t\treturn this.next(new Date(outset.getTime() + Time.Day), false);\n\t\t}\n\t\tif (!origin) return new Date(Date.UTC(outset.getUTCFullYear(), outset.getUTCMonth(), outset.getUTCDate(), this.hours[0], this.minutes[0]));\n\n\t\tconst now = new Date(outset.getTime() + 60000);\n\n\t\tfor (const hour of this.hours) {\n\t\t\tif (hour < now.getUTCHours()) continue;\n\t\t\tfor (const minute of this.minutes) {\n\t\t\t\tif (hour === now.getUTCHours() && minute < now.getUTCMinutes()) continue;\n\t\t\t\treturn new Date(Date.UTC(outset.getUTCFullYear(), outset.getUTCMonth(), outset.getUTCDate(), hour, minute));\n\t\t\t}\n\t\t}\n\n\t\treturn this.next(new Date(outset.getTime() + Time.Day), false);\n\t}\n\n\t/**\n\t * Normalize the pattern\n\t * @param cron The pattern to normalize\n\t */\n\tprivate static normalize(cron: string): string {\n\t\tif (Reflect.has(predefined, cron)) return Reflect.get(predefined, cron);\n\t\tconst now = new Date();\n\t\tcron = cron\n\t\t\t.split(' ')\n\t\t\t.map((val, i) =>\n\t\t\t\tval.replace(wildcardRegex, (match) => {\n\t\t\t\t\tif (match === 'h') return (Math.floor(Math.random() * allowedNum[i][1]) + allowedNum[i][0]).toString();\n\n\t\t\t\t\tif (match === '?') {\n\t\t\t\t\t\tswitch (i) {\n\t\t\t\t\t\t\tcase 0:\n\t\t\t\t\t\t\t\treturn now.getUTCMinutes().toString();\n\t\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\t\treturn now.getUTCHours().toString();\n\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\treturn now.getUTCDate().toString();\n\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\treturn now.getUTCMonth().toString();\n\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\treturn now.getUTCDay().toString();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn match;\n\t\t\t\t})\n\t\t\t)\n\t\t\t.join(' ');\n\t\treturn cron.replace(tokensRegex, (match) => String(Reflect.get(cronTokens, match)));\n\t}\n\n\t/**\n\t * Parse the pattern\n\t * @param cron The pattern to parse\n\t */\n\tprivate static parseString(cron: string): Array<number[]> {\n\t\tconst parts = cron.split(' ');\n\t\tif (parts.length !== 5) throw new Error('Invalid Cron Provided');\n\t\treturn parts.map((part, i) => Cron.parsePart(part, i));\n\t}\n\n\t/**\n\t * Parse the current part\n\t * @param cronPart The part of the pattern to parse\n\t * @param id The id that identifies the current part\n\t */\n\tprivate static parsePart(cronPart: string, id: number): number[] {\n\t\tif (cronPart.includes(',')) {\n\t\t\tconst res = [];\n\t\t\tfor (const part of cronPart.split(',')) res.push(...Cron.parsePart(part, id));\n\t\t\treturn [...new Set(res)].sort((a, b) => a - b);\n\t\t}\n\n\t\t// eslint-disable-next-line prefer-const\n\t\tconst [, wild, minStr, maxStr, step] = partRegex.exec(cronPart)!;\n\t\tlet [min, max] = [parseInt(minStr, 10), parseInt(maxStr, 10)];\n\n\t\t// If '*', set min and max as the minimum and maximum allowed numbers:\n\t\tif (wild) [min, max] = allowedNum[id];\n\t\t// Else if a number was given, but not a maximum nor a step, return it\n\t\t// as only allowed value:\n\t\telse if (!max && !step) return [min];\n\n\t\t// Set min and max as the given numbers, defaulting max to the maximum\n\t\t// allowed, so min is never bigger than max:\n\t\t// This makes min and max be, in the following cases (considering minutes):\n\t\t// -> 1-2 | 1..2\n\t\t// -> 2-1 | 1..2\n\t\t// -> 1/7 | 1, 8, 15, 22, 29, 36, 43, 50, 57\n\t\t[min, max] = [min, max || allowedNum[id][1]].sort((a, b) => a - b);\n\n\t\t// Generate a range\n\t\treturn range(min, max, parseInt(step, 10) || 1);\n\t}\n}\n","function arrayStrictEquals(t,e){if(t===e)return!0;if(t.length!==e.length)return!1;for(let n=0;n<t.length;n++)if(t[n]!==e[n]||typeof t[n]!=typeof e[n])return!1;return!0}function chunk(t,e){if(!Array.isArray(t))throw new TypeError(\"entries must be an array.\");if(!Number.isInteger(e))throw new TypeError(\"chunkSize must be an integer.\");if(e<1)throw new RangeError(\"chunkSize must be 1 or greater.\");const n=t.slice(),r=[];for(;n.length;)r.push(n.splice(0,e));return r}function classExtends(t,e){let n=t;for(;null!==n;){if(n===e)return!0;n=Object.getPrototypeOf(n)}return!1}const t=String.fromCharCode(8203);function codeBlock(e,n){return\"string\"==typeof n?0===n.length?`\\`\\`\\`${t}\\`\\`\\``:`\\`\\`\\`${e}\\n${n.replace(/```/,`\\`${t}\\`\\``).replace(/`$/g,`\\`${t}`)}\\`\\`\\``:`\\`\\`\\`${e}\\n${n||t}\\`\\`\\``}function splitText(t,e,n=\" \"){const r=t.substring(0,e).lastIndexOf(n),o=-1===r?e:r;return t.substring(0,o)}function cutText(t,e){if(t.length<e)return t;const n=splitText(t,e-3);return n.length<e-3?`${n}...`:`${n.slice(0,e-3)}...`}function debounce(t,e={}){var n;let r,o,s,a,i=0;const u=null!==(n=e.wait)&&void 0!==n?n:0,h=\"number\"==typeof e.maxWait?Math.max(e.maxWait,u):null;function invokeFunc(e){const n=r;return r=void 0,i=e,o=t(...n),o}function shouldInvoke(t){const e=t-a;return void 0===a||e>=u||e<0||null!==h&&t-i>=h}function timerExpired(){const t=Date.now();shouldInvoke(t)?trailingEdge(t):s=setTimeout(timerExpired,function remainingWait(t){const e=t-i,n=u-(t-a);return null===h?n:Math.min(n,h-e)}(t))}function trailingEdge(t){return s=void 0,invokeFunc(t)}function debounced(...t){const e=Date.now(),n=shouldInvoke(e);if(r=t,a=e,n){if(void 0===s)return function leadingEdge(t){return i=t,s=setTimeout(timerExpired,u),o}(a);if(null!==h)return s=setTimeout(timerExpired,u),invokeFunc(a)}return void 0===s&&(s=setTimeout(timerExpired,u)),o}return debounced.cancel=function cancel(){void 0!==s&&clearTimeout(s),i=0,r=void 0,a=void 0,s=void 0},debounced.flush=function flush(){return void 0===s?o:trailingEdge(Date.now())},debounced}function isObject(t){return!(\"object\"!=typeof t||!t)&&t.constructor===Object}const e=[\"string\",\"bigint\",\"number\",\"boolean\"];function isPrimitive(t){return e.includes(typeof t)}function deepClone(t){if(null===t||isPrimitive(t))return t;if(Array.isArray(t)){const e=[];for(const n of t)e.push(deepClone(n));return e}if(isObject(t)){const e={};for(const[n,r]of Object.entries(t))e[n]=deepClone(r);return e}if(t instanceof Map){const e=new t.constructor;for(const[n,r]of t.entries())e.set(n,deepClone(r));return e}if(t instanceof Set){const e=new t.constructor;for(const n of t.values())e.add(deepClone(n));return e}return t}const n=String.fromCharCode(8203);function inlineCodeBlock(t){return`\\`${t.replace(/ /g,\" \").replace(/`/g,`\\`${n}`)}\\``}function isClass(t){return\"function\"==typeof t&&\"object\"==typeof t.prototype}function isFunction(t){return\"function\"==typeof t}function isNullOrUndefined(t){return null==t}function isNumber(t){return\"number\"==typeof t&&!isNaN(t)&&Number.isFinite(t)}function isThenable(t){return\"object\"==typeof t&&null!==t&&(t instanceof Promise||t!==Promise.prototype&&function hasThen(t){return Reflect.has(t,\"then\")&&isFunction(t.then)}(t)&&function hasCatch(t){return Reflect.has(t,\"catch\")&&isFunction(t.catch)}(t))}function makeObject(t,e,n={}){if(t.includes(\".\")){const r=t.split(\".\"),o=r.pop();let s=n;for(const t of r)s[t]||(s[t]={}),s=s[t];s[o]=e}else n[t]=e;return n}function mergeDefault(t,e){if(!e)return deepClone(t);for(const[n,r]of Object.entries(t)){const t=Reflect.get(e,n);void 0===t?Reflect.set(e,n,deepClone(r)):isObject(t)&&Reflect.set(e,n,mergeDefault(null!=r?r:{},t))}return e}function mergeObjects(t,e){for(const[n,r]of Object.entries(e)){const e=Reflect.get(t,n);isObject(r)?Reflect.set(t,n,isObject(e)?mergeObjects(e,r):r):isObject(e)||Reflect.set(t,n,r)}return t}function noop(){}function objectToTuples(t,e=\"\"){const n=[];for(const[r,o]of Object.entries(t))isObject(o)?n.push(...objectToTuples(o,`${e}${r}.`)):n.push([`${e}${r}`,o]);return n}var r=/[^\\x20-\\x7E]/,o=/[\\x2E\\u3002\\uFF0E\\uFF61]/g,s={overflow:\"Overflow: input needs wider integers to process\",\"not-basic\":\"Illegal input >= 0x80 (not a basic code point)\",\"invalid-input\":\"Invalid input\"},a=Math.floor,i=String.fromCharCode;function error(t){throw new RangeError(s[t])}function digitToBasic(t,e){return t+22+75*(t<26)-((0!=e)<<5)}function adapt(t,e,n){var r=0;for(t=n?a(t/700):t>>1,t+=a(t/e);t>455;r+=36)t=a(t/35);return a(r+36*t/(t+38))}function toASCII(t){return function mapDomain(t,e){var n=t.split(\"@\"),r=\"\";n.length>1&&(r=n[0]+\"@\",t=n[1]);var s=function map(t,e){for(var n=t.length,r=[];n--;)r[n]=e(t[n]);return r}((t=t.replace(o,\".\")).split(\".\"),e).join(\".\");return r+s}(t,(function(t){return r.test(t)?\"xn--\"+function encode(t){var e,n,r,o,s,u,h,c,l,f,p,m,d,g,v,b=[];for(m=(t=function ucs2decode(t){for(var e,n,r=[],o=0,s=t.length;o<s;)(e=t.charCodeAt(o++))>=55296&&e<=56319&&o<s?56320==(64512&(n=t.charCodeAt(o++)))?r.push(((1023&e)<<10)+(1023&n)+65536):(r.push(e),o--):r.push(e);return r}(t)).length,e=128,n=0,s=72,u=0;u<m;++u)(p=t[u])<128&&b.push(i(p));for(r=o=b.length,o&&b.push(\"-\");r<m;){for(h=2147483647,u=0;u<m;++u)(p=t[u])>=e&&p<h&&(h=p);for(h-e>a((2147483647-n)/(d=r+1))&&error(\"overflow\"),n+=(h-e)*d,e=h,u=0;u<m;++u)if((p=t[u])<e&&++n>2147483647&&error(\"overflow\"),p==e){for(c=n,l=36;!(c<(f=l<=s?1:l>=s+26?26:l-s));l+=36)v=c-f,g=36-f,b.push(i(digitToBasic(f+v%g,0))),c=a(v/g);b.push(i(digitToBasic(c,0))),s=adapt(n,d,r==o),n=0,++r}++n,++e}return b.join(\"\")}(t):t}))}function isNull(t){return null===t}function isString(t){return\"string\"==typeof t}function isObject$1(t){return\"object\"==typeof t&&null!==t}function hasOwnProperty(t,e){return Object.prototype.hasOwnProperty.call(t,e)}var u=Array.isArray||function(t){return\"[object Array]\"===Object.prototype.toString.call(t)};function stringifyPrimitive(t){switch(typeof t){case\"string\":return t;case\"boolean\":return t?\"true\":\"false\";case\"number\":return isFinite(t)?t:\"\";default:return\"\"}}function map$1(t,e){if(t.map)return t.map(e);for(var n=[],r=0;r<t.length;r++)n.push(e(t[r],r));return n}var h=Object.keys||function(t){var e=[];for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&e.push(n);return e};function parse(t,e,n,r){e=e||\"&\",n=n||\"=\";var o={};if(\"string\"!=typeof t||0===t.length)return o;var s=/\\+/g;t=t.split(e);var a=1e3;r&&\"number\"==typeof r.maxKeys&&(a=r.maxKeys);var i=t.length;a>0&&i>a&&(i=a);for(var h=0;h<i;++h){var c,l,f,p,m=t[h].replace(s,\"%20\"),d=m.indexOf(n);d>=0?(c=m.substr(0,d),l=m.substr(d+1)):(c=m,l=\"\"),f=decodeURIComponent(c),p=decodeURIComponent(l),hasOwnProperty(o,f)?u(o[f])?o[f].push(p):o[f]=[o[f],p]:o[f]=p}return o}function Url(){this.protocol=null,this.slashes=null,this.auth=null,this.host=null,this.port=null,this.hostname=null,this.hash=null,this.search=null,this.query=null,this.pathname=null,this.path=null,this.href=null}const c=Url;var l=/^([a-z0-9.+-]+:)/i,f=/:[0-9]*$/,p=/^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,m=[\"{\",\"}\",\"|\",\"\\\\\",\"^\",\"`\"].concat([\"<\",\">\",'\"',\"`\",\" \",\"\\r\",\"\\n\",\"\\t\"]),d=[\"'\"].concat(m),g=[\"%\",\"/\",\"?\",\";\",\"#\"].concat(d),v=[\"/\",\"?\",\"#\"],b=/^[+a-z0-9A-Z_-]{0,63}$/,y=/^([+a-z0-9A-Z_-]{0,63})(.*)$/,O={javascript:!0,\"javascript:\":!0},j={javascript:!0,\"javascript:\":!0},x={http:!0,https:!0,ftp:!0,gopher:!0,file:!0,\"http:\":!0,\"https:\":!0,\"ftp:\":!0,\"gopher:\":!0,\"file:\":!0};function format(t){var e=t.auth||\"\";e&&(e=(e=encodeURIComponent(e)).replace(/%3A/i,\":\"),e+=\"@\");var n=t.protocol||\"\",r=t.pathname||\"\",o=t.hash||\"\",s=!1,a=\"\";t.host?s=e+t.host:t.hostname&&(s=e+(-1===t.hostname.indexOf(\":\")?t.hostname:\"[\"+this.hostname+\"]\"),t.port&&(s+=\":\"+t.port)),t.query&&isObject$1(t.query)&&Object.keys(t.query).length&&(a=function stringify(t,e,n,r){return e=e||\"&\",n=n||\"=\",null===t&&(t=void 0),\"object\"==typeof t?map$1(h(t),(function(r){var o=encodeURIComponent(stringifyPrimitive(r))+n;return u(t[r])?map$1(t[r],(function(t){return o+encodeURIComponent(stringifyPrimitive(t))})).join(e):o+encodeURIComponent(stringifyPrimitive(t[r]))})).join(e):r?encodeURIComponent(stringifyPrimitive(r))+n+encodeURIComponent(stringifyPrimitive(t)):\"\"}(t.query));var i=t.search||a&&\"?\"+a||\"\";return n&&\":\"!==n.substr(-1)&&(n+=\":\"),t.slashes||(!n||x[n])&&!1!==s?(s=\"//\"+(s||\"\"),r&&\"/\"!==r.charAt(0)&&(r=\"/\"+r)):s||(s=\"\"),o&&\"#\"!==o.charAt(0)&&(o=\"#\"+o),i&&\"?\"!==i.charAt(0)&&(i=\"?\"+i),n+s+(r=r.replace(/[?#]/g,(function(t){return encodeURIComponent(t)})))+(i=i.replace(\"#\",\"%23\"))+o}function parseHost(t){var e=t.host,n=f.exec(e);n&&(\":\"!==(n=n[0])&&(t.port=n.substr(1)),e=e.substr(0,e.length-n.length)),e&&(t.hostname=e)}function parseURL(t){try{return new c(t)}catch{return null}}function range(t,e,n){return new Array(Math.floor((e-t)/n)+1).fill(0).map(((e,r)=>t+r*n))}Url.prototype.parse=function(t,e,n){return function parse$1(t,e,n,r){if(!isString(e))throw new TypeError(\"Parameter 'url' must be a string, not \"+typeof e);var o=e.indexOf(\"?\"),s=-1!==o&&o<e.indexOf(\"#\")?\"?\":\"#\",a=e.split(s),i=/\\\\/g;a[0]=a[0].replace(i,\"/\");var u=e=a.join(s);if(u=u.trim(),!r&&1===e.split(\"#\").length){var h=p.exec(u);if(h)return t.path=u,t.href=u,t.pathname=h[1],h[2]?(t.search=h[2],t.query=n?parse(t.search.substr(1)):t.search.substr(1)):n&&(t.search=\"\",t.query={}),t}var c,f,m,C,$=l.exec(u);if($){var w=($=$[0]).toLowerCase();t.protocol=w,u=u.substr($.length)}if(r||$||u.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)){var U=\"//\"===u.substr(0,2);!U||$&&j[$]||(u=u.substr(2),t.slashes=!0)}if(!j[$]&&(U||$&&!x[$])){var T,N,A=-1;for(c=0;c<v.length;c++)-1!==(f=u.indexOf(v[c]))&&(-1===A||f<A)&&(A=f);for(-1!==(N=-1===A?u.lastIndexOf(\"@\"):u.lastIndexOf(\"@\",A))&&(T=u.slice(0,N),u=u.slice(N+1),t.auth=decodeURIComponent(T)),A=-1,c=0;c<g.length;c++)-1!==(f=u.indexOf(g[c]))&&(-1===A||f<A)&&(A=f);-1===A&&(A=u.length),t.host=u.slice(0,A),u=u.slice(A),parseHost(t),t.hostname=t.hostname||\"\";var E=\"[\"===t.hostname[0]&&\"]\"===t.hostname[t.hostname.length-1];if(!E){var I=t.hostname.split(/\\./);for(c=0,m=I.length;c<m;c++){var R=I[c];if(R&&!R.match(b)){for(var k=\"\",q=0,P=R.length;q<P;q++)R.charCodeAt(q)>127?k+=\"x\":k+=R[q];if(!k.match(b)){var S=I.slice(0,c),F=I.slice(c+1),M=R.match(y);M&&(S.push(M[1]),F.unshift(M[2])),F.length&&(u=\"/\"+F.join(\".\")+u),t.hostname=S.join(\".\");break}}}}t.hostname.length>255?t.hostname=\"\":t.hostname=t.hostname.toLowerCase(),E||(t.hostname=toASCII(t.hostname)),C=t.port?\":\"+t.port:\"\";var B=t.hostname||\"\";t.host=B+C,t.href+=t.host,E&&(t.hostname=t.hostname.substr(1,t.hostname.length-2),\"/\"!==u[0]&&(u=\"/\"+u))}if(!O[w])for(c=0,m=d.length;c<m;c++){var D=d[c];if(-1!==u.indexOf(D)){var z=encodeURIComponent(D);z===D&&(z=escape(D)),u=u.split(D).join(z)}}var L=u.indexOf(\"#\");-1!==L&&(t.hash=u.substr(L),u=u.slice(0,L));var H=u.indexOf(\"?\");-1!==H?(t.search=u.substr(H),t.query=u.substr(H+1),n&&(t.query=parse(t.query)),u=u.slice(0,H)):n&&(t.search=\"\",t.query={});u&&(t.pathname=u);x[w]&&t.hostname&&!t.pathname&&(t.pathname=\"/\");if(t.pathname||t.search){C=t.pathname||\"\";var W=t.search||\"\";t.path=C+W}return t.href=format(t),t}(this,t,e,n)},Url.prototype.format=function(){return format(this)},Url.prototype.resolve=function(t){return this.resolveObject(function urlParse(t,e,n){if(t&&isObject$1(t)&&t instanceof Url)return t;var r=new Url;return r.parse(t,e,n),r}(t,!1,!0)).format()},Url.prototype.resolveObject=function(t){if(isString(t)){var e=new Url;e.parse(t,!1,!0),t=e}for(var n,r=new Url,o=Object.keys(this),s=0;s<o.length;s++){var a=o[s];r[a]=this[a]}if(r.hash=t.hash,\"\"===t.href)return r.href=r.format(),r;if(t.slashes&&!t.protocol){for(var i=Object.keys(t),u=0;u<i.length;u++){var h=i[u];\"protocol\"!==h&&(r[h]=t[h])}return x[r.protocol]&&r.hostname&&!r.pathname&&(r.path=r.pathname=\"/\"),r.href=r.format(),r}if(t.protocol&&t.protocol!==r.protocol){if(!x[t.protocol]){for(var c=Object.keys(t),l=0;l<c.length;l++){var f=c[l];r[f]=t[f]}return r.href=r.format(),r}if(r.protocol=t.protocol,t.host||j[t.protocol])r.pathname=t.pathname;else{for(n=(t.pathname||\"\").split(\"/\");n.length&&!(t.host=n.shift()););t.host||(t.host=\"\"),t.hostname||(t.hostname=\"\"),\"\"!==n[0]&&n.unshift(\"\"),n.length<2&&n.unshift(\"\"),r.pathname=n.join(\"/\")}if(r.search=t.search,r.query=t.query,r.host=t.host||\"\",r.auth=t.auth,r.hostname=t.hostname||t.host,r.port=t.port,r.pathname||r.search){var p=r.pathname||\"\",m=r.search||\"\";r.path=p+m}return r.slashes=r.slashes||t.slashes,r.href=r.format(),r}var d,g=r.pathname&&\"/\"===r.pathname.charAt(0),v=t.host||t.pathname&&\"/\"===t.pathname.charAt(0),b=v||g||r.host&&t.pathname,y=b,O=r.pathname&&r.pathname.split(\"/\")||[],C=r.protocol&&!x[r.protocol];if(n=t.pathname&&t.pathname.split(\"/\")||[],C&&(r.hostname=\"\",r.port=null,r.host&&(\"\"===O[0]?O[0]=r.host:O.unshift(r.host)),r.host=\"\",t.protocol&&(t.hostname=null,t.port=null,t.host&&(\"\"===n[0]?n[0]=t.host:n.unshift(t.host)),t.host=null),b=b&&(\"\"===n[0]||\"\"===O[0])),v)r.host=t.host||\"\"===t.host?t.host:r.host,r.hostname=t.hostname||\"\"===t.hostname?t.hostname:r.hostname,r.search=t.search,r.query=t.query,O=n;else if(n.length)O||(O=[]),O.pop(),O=O.concat(n),r.search=t.search,r.query=t.query;else if(!function isNullOrUndefined$1(t){return null==t}(t.search))return C&&(r.hostname=r.host=O.shift(),(d=!!(r.host&&r.host.indexOf(\"@\")>0)&&r.host.split(\"@\"))&&(r.auth=d.shift(),r.host=r.hostname=d.shift())),r.search=t.search,r.query=t.query,isNull(r.pathname)&&isNull(r.search)||(r.path=(r.pathname?r.pathname:\"\")+(r.search?r.search:\"\")),r.href=r.format(),r;if(!O.length)return r.pathname=null,r.search?r.path=\"/\"+r.search:r.path=null,r.href=r.format(),r;for(var $=O.slice(-1)[0],w=(r.host||t.host||O.length>1)&&(\".\"===$||\"..\"===$)||\"\"===$,U=0,T=O.length;T>=0;T--)\".\"===($=O[T])?O.splice(T,1):\"..\"===$?(O.splice(T,1),U++):U&&(O.splice(T,1),U--);if(!b&&!y)for(;U--;U)O.unshift(\"..\");!b||\"\"===O[0]||O[0]&&\"/\"===O[0].charAt(0)||O.unshift(\"\"),w&&\"/\"!==O.join(\"/\").substr(-1)&&O.push(\"\");var N=\"\"===O[0]||O[0]&&\"/\"===O[0].charAt(0);return C&&(r.hostname=r.host=N?\"\":O.length?O.shift():\"\",(d=!!(r.host&&r.host.indexOf(\"@\")>0)&&r.host.split(\"@\"))&&(r.auth=d.shift(),r.host=r.hostname=d.shift())),(b=b||r.host&&O.length)&&!N&&O.unshift(\"\"),O.length?r.pathname=O.join(\"/\"):(r.pathname=null,r.path=null),isNull(r.pathname)&&isNull(r.search)||(r.path=(r.pathname?r.pathname:\"\")+(r.search?r.search:\"\")),r.auth=t.auth||r.auth,r.slashes=r.slashes||t.slashes,r.href=r.format(),r},Url.prototype.parseHost=function(){return parseHost(this)};const C=/[-/\\\\^$*+?.()|[\\]{}]/g;function regExpEsc(t){return t.replace(C,\"\\\\$&\")}function roundNumber(t,e=0){if(!t.toString().includes(\"e\"))return Number(`${Math.round(Number(`${t}e+${e}`))}e-${e}`);const n=`${t}`.split(\"e\");let r=\"\";return Number(n[1])+e>0&&(r=\"+\"),Number(`${Math.round(Number(`${Number(n[0])}e${r}${Number(n[1])+e}`))}e-${e}`)}const $=/[A-Za-zÀ-ÖØ-öø-ÿ]\\S*/g,w={textchannel:\"TextChannel\",voicechannel:\"VoiceChannel\",categorychannel:\"CategoryChannel\",guildmember:\"GuildMember\"};function toTitleCase(t){return t.replace($,(t=>w[t]||t.charAt(0).toUpperCase()+t.substr(1).toLowerCase()))}function tryParse(t){try{return JSON.parse(t)}catch(e){return t}}export{arrayStrictEquals,chunk,classExtends,codeBlock,cutText,debounce,deepClone,inlineCodeBlock,isClass,isFunction,isNullOrUndefined,isNullOrUndefined as isNullish,isNumber,isObject,isPrimitive,isThenable,makeObject,mergeDefault,mergeObjects,noop,objectToTuples,parseURL,range,regExpEsc,roundNumber,splitText,toTitleCase,tryParse};\n//# sourceMappingURL=index.mjs.map\n","/* eslint-disable @typescript-eslint/restrict-plus-operands */\nconst tokens = new Map([\n\t['nanosecond', 1 / 1e6],\n\t['nanoseconds', 1 / 1e6],\n\t['ns', 1 / 1e6],\n\n\t['millisecond', 1],\n\t['milliseconds', 1],\n\t['ms', 1],\n\n\t['second', 1000],\n\t['seconds', 1000],\n\t['sec', 1000],\n\t['secs', 1000],\n\t['s', 1000],\n\n\t['minute', 1000 * 60],\n\t['minutes', 1000 * 60],\n\t['min', 1000 * 60],\n\t['mins', 1000 * 60],\n\t['m', 1000 * 60],\n\n\t['hour', 1000 * 60 * 60],\n\t['hours', 1000 * 60 * 60],\n\t['hr', 1000 * 60 * 60],\n\t['hrs', 1000 * 60 * 60],\n\t['h', 1000 * 60 * 60],\n\n\t['day', 1000 * 60 * 60 * 24],\n\t['days', 1000 * 60 * 60 * 24],\n\t['d', 1000 * 60 * 60 * 24],\n\n\t['week', 1000 * 60 * 60 * 24 * 7],\n\t['weeks', 1000 * 60 * 60 * 24 * 7],\n\t['wk', 1000 * 60 * 60 * 24 * 7],\n\t['wks', 1000 * 60 * 60 * 24 * 7],\n\t['w', 1000 * 60 * 60 * 24 * 7],\n\n\t['month', 1000 * 60 * 60 * 24 * (365.25 / 12)],\n\t['months', 1000 * 60 * 60 * 24 * (365.25 / 12)],\n\t['b', 1000 * 60 * 60 * 24 * (365.25 / 12)],\n\t['mo', 1000 * 60 * 60 * 24 * (365.25 / 12)],\n\n\t['year', 1000 * 60 * 60 * 24 * 365.25],\n\t['years', 1000 * 60 * 60 * 24 * 365.25],\n\t['yr', 1000 * 60 * 60 * 24 * 365.25],\n\t['yrs', 1000 * 60 * 60 * 24 * 365.25],\n\t['y', 1000 * 60 * 60 * 24 * 365.25]\n]);\n\n/**\n * Converts duration strings into ms and future dates\n */\nexport class Duration {\n\t/**\n\t * The offset\n\t */\n\tpublic offset: number;\n\n\t/**\n\t * Create a new Duration instance\n\t * @param pattern The string to parse\n\t */\n\tpublic constructor(pattern: string) {\n\t\tthis.offset = Duration.parse(pattern.toLowerCase());\n\t}\n\n\t/**\n\t * Get the date from now\n\t */\n\tpublic get fromNow(): Date {\n\t\treturn this.dateFrom(new Date());\n\t}\n\n\t/**\n\t * Get the date from\n\t * @param date The Date instance to get the date from\n\t */\n\tpublic dateFrom(date: Date): Date {\n\t\treturn new Date(date.getTime() + this.offset);\n\t}\n\n\t/**\n\t * The RegExp used for the pattern parsing\n\t */\n\tprivate static readonly kPatternRegex = /(-?\\d*\\.?\\d+(?:e[-+]?\\d+)?)\\s*([a-zμ]*)/gi;\n\n\t/**\n\t * The RegExp used for removing commas\n\t */\n\tprivate static readonly kCommaRegex = /,/g;\n\n\t/**\n\t * The RegExp used for replacing a/an with 1\n\t */\n\tprivate static readonly kAanRegex = /\\ban?\\b/gi;\n\n\t/**\n\t * Parse the pattern\n\t * @param pattern The pattern to parse\n\t */\n\tprivate static parse(pattern: string): number {\n\t\tlet result = 0;\n\n\t\tpattern\n\t\t\t// ignore commas\n\t\t\t.replace(Duration.kCommaRegex, '')\n\t\t\t// a / an = 1\n\t\t\t.replace(Duration.kAanRegex, '1')\n\t\t\t// do math\n\t\t\t.replace(Duration.kPatternRegex, (_, i, units) => {\n\t\t\t\tunits = tokens.get(units) ?? 0;\n\t\t\t\tresult += Number(i) * units;\n\t\t\t\treturn '';\n\t\t\t});\n\n\t\treturn result;\n\t}\n}\n","import { DEFAULT_UNITS, TimeTypes } from './constants';\n\n/**\n * The duration of each time type in milliseconds\n */\nconst kTimeDurations: readonly [TimeTypes, number][] = [\n\t[TimeTypes.Year, 31536000000],\n\t// 29.53059 days is the official duration of a month: https://en.wikipedia.org/wiki/Month\n\t[TimeTypes.Month, 2628000000],\n\t[TimeTypes.Week, 1000 * 60 * 60 * 24 * 7],\n\t[TimeTypes.Day, 1000 * 60 * 60 * 24],\n\t[TimeTypes.Hour, 1000 * 60 * 60],\n\t[TimeTypes.Minute, 1000 * 60],\n\t[TimeTypes.Second, 1000]\n];\n\n/**\n * Display the duration\n * @param duration The duration in milliseconds to parse and display\n * @param assets The language assets\n */\nexport class DurationFormatter {\n\tpublic constructor(public units: DurationFormatAssetsTime = DEFAULT_UNITS) {}\n\n\tpublic format(duration: number, precision = 7) {\n\t\tconst output: string[] = [];\n\t\tconst negative = duration < 0;\n\t\tif (negative) duration *= -1;\n\n\t\tfor (const [type, timeDuration] of kTimeDurations) {\n\t\t\tconst substraction = duration / timeDuration;\n\t\t\tif (substraction < 1) continue;\n\n\t\t\tconst floored = Math.floor(substraction);\n\t\t\tduration -= floored * timeDuration;\n\t\t\toutput.push(addUnit(floored, this.units[type]));\n\n\t\t\t// If the output has enough precision, break\n\t\t\tif (output.length >= precision) break;\n\t\t}\n\n\t\treturn `${negative ? '-' : ''}${output.join(' ') || addUnit(0, this.units.second)}`;\n\t}\n}\n\n/**\n * Adds an unit, if non zero\n * @param time The duration of said unit\n * @param unit The unit language assets\n */\nfunction addUnit(time: number, unit: DurationFormatAssetsUnit) {\n\tif (Reflect.has(unit, time)) return `${time} ${Reflect.get(unit, time)}`;\n\treturn `${time} ${unit.DEFAULT}`;\n}\n\ninterface DurationFormatAssetsUnit extends Record<number, string> {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tDEFAULT: string;\n}\n\nexport interface DurationFormatAssetsTime {\n\t[TimeTypes.Second]: DurationFormatAssetsUnit;\n\t[TimeTypes.Minute]: DurationFormatAssetsUnit;\n\t[TimeTypes.Hour]: DurationFormatAssetsUnit;\n\t[TimeTypes.Day]: DurationFormatAssetsUnit;\n\t[TimeTypes.Week]: DurationFormatAssetsUnit;\n\t[TimeTypes.Month]: DurationFormatAssetsUnit;\n\t[TimeTypes.Year]: DurationFormatAssetsUnit;\n}\n","/**\n * Manages timers so that this application can be cleanly exited\n */\nexport class TimerManager extends null {\n\t/**\n\t * A set of timeouts to clear on destroy\n\t */\n\tprivate static storedTimeouts = new Set<NodeJS.Timeout>();\n\n\t/**\n\t * A set of intervals to clear on destroy\n\t */\n\tprivate static storedIntervals = new Set<NodeJS.Timeout>();\n\n\t/**\n\t * Creates a timeout gets cleared when destroyed\n\t * @param fn callback function\n\t * @param delay amount of time before running the callback\n\t * @param args additional arguments to pass back to the callback\n\t */\n\tpublic static setTimeout<A = unknown>(fn: (...args: A[]) => void, delay: number, ...args: A[]): NodeJS.Timeout {\n\t\tconst timeout = setTimeout(() => {\n\t\t\tthis.storedTimeouts.delete(timeout);\n\t\t\tfn(...args);\n\t\t}, delay);\n\t\tthis.storedTimeouts.add(timeout);\n\t\treturn timeout;\n\t}\n\n\t/**\n\t * Clears a timeout created through this class\n\t * @param timeout The timeout to clear\n\t */\n\tpublic static clearTimeout(timeout: NodeJS.Timeout): void {\n\t\tclearTimeout(timeout);\n\t\tthis.storedTimeouts.delete(timeout);\n\t}\n\n\t/**\n\t * Creates an interval gets cleared when destroyed\n\t * @param fn callback function\n\t * @param delay amount of time before running the callback\n\t * @param args additional arguments to pass back to the callback\n\t */\n\tpublic static setInterval<A = unknown>(fn: (...args: A[]) => void, delay: number, ...args: A[]): NodeJS.Timeout {\n\t\tconst interval = setInterval(fn, delay, ...args);\n\t\tthis.storedIntervals.add(interval);\n\t\treturn interval;\n\t}\n\n\t/**\n\t * Clears an internal created through this class\n\t * @param interval The interval to clear\n\t */\n\tpublic static clearInterval(interval: NodeJS.Timeout): void {\n\t\tclearInterval(interval);\n\t\tthis.storedIntervals.delete(interval);\n\t}\n\n\t/**\n\t * Clears running timeouts and intervals created through this class so NodeJS can gracefully exit\n\t */\n\tpublic static destroy(): void {\n\t\tfor (const i of this.storedTimeouts) clearTimeout(i);\n\t\tfor (const i of this.storedIntervals) clearInterval(i);\n\t\tthis.storedTimeouts.clear();\n\t\tthis.storedIntervals.clear();\n\t}\n}\n","import { days, months, Time, tokens } from './constants';\n\ninterface TokenResolver {\n\t(time: Date): string;\n}\n\nconst tokenResolvers = new Map<string, TokenResolver>([\n\t// Dates\n\t['Y', (time) => String(time.getFullYear()).slice(2)],\n\t['YY', (time) => String(time.getFullYear()).slice(2)],\n\t['YYY', (time) => String(time.getFullYear())],\n\t['YYYY', (time) => String(time.getFullYear())],\n\t['Q', (time) => String((time.getMonth() + 1) / 3)],\n\t['M', (time) => String(time.getMonth() + 1)],\n\t['MM', (time) => String(time.getMonth() + 1).padStart(2, '0')],\n\t['MMM', (time) => months[time.getMonth()]],\n\t['MMMM', (time) => months[time.getMonth()]],\n\t['D', (time) => String(time.getDate())],\n\t['DD', (time) => String(time.getDate()).padStart(2, '0')],\n\t['DDD', (time) => String(Math.floor((time.getTime() - new Date(time.getFullYear(), 0, 0).getTime()) / Time.Day))],\n\t['DDDD', (time) => String(Math.floor((time.getTime() - new Date(time.getFullYear(), 0, 0).getTime()) / Time.Day))],\n\t[\n\t\t'd',\n\t\t(time) => {\n\t\t\tconst day = String(time.getDate());\n\t\t\tif (day !== '11' && day.endsWith('1')) return `${day}st`;\n\t\t\tif (day !== '12' && day.endsWith('2')) return `${day}nd`;\n\t\t\tif (day !== '13' && day.endsWith('3')) return `${day}rd`;\n\t\t\treturn `${day}th`;\n\t\t}\n\t],\n\t['dd', (time) => days[time.getDay()].slice(0, 2)],\n\t['ddd', (time) => days[time.getDay()].slice(0, 3)],\n\t['dddd', (time) => days[time.getDay()]],\n\t['X', (time) => String(time.valueOf() / Time.Second)],\n\t['x', (time) => String(time.valueOf())],\n\n\t// Locales\n\t['H', (time) => String(time.getHours())],\n\t['HH', (time) => String(time.getHours()).padStart(2, '0')],\n\t['h', (time) => String(time.getHours() % 12 || 12)],\n\t['hh', (time) => String(time.getHours() % 12 || 12).padStart(2, '0')],\n\t['a', (time) => (time.getHours() < 12 ? 'am' : 'pm')],\n\t['A', (time) => (time.getHours() < 12 ? 'AM' : 'PM')],\n\t['m', (time) => String(time.getMinutes())],\n\t['mm', (time) => String(time.getMinutes()).padStart(2, '0')],\n\t['s', (time) => String(time.getSeconds())],\n\t['ss', (time) => String(time.getSeconds()).padStart(2, '0')],\n\t['S', (time) => String(time.getMilliseconds())],\n\t['SS', (time) => String(time.getMilliseconds()).padStart(2, '0')],\n\t['SSS', (time) => String(time.getMilliseconds()).padStart(3, '0')],\n\t['T', (time) => `${String(time.getHours() % 12 || 12)}:${String(time.getMinutes()).padStart(2, '0')} ${time.getHours() < 12 ? 'AM' : 'PM'}`],\n\t[\n\t\t't',\n\t\t(time) =>\n\t\t\t`${String(time.getHours() % 12 || 12)}:${String(time.getMinutes()).padStart(2, '0')}:${String(time.getSeconds()).padStart(2, '0')} ${\n\t\t\t\ttime.getHours() < 12 ? 'am' : 'pm'\n\t\t\t}`\n\t],\n\t['L', (time) => `${String(time.getMonth() + 1).padStart(2, '0')}/${String(time.getDate()).padStart(2, '0')}/${String(time.getFullYear())}`],\n\t['l', (time) => `${String(time.getMonth() + 1)}/${String(time.getDate()).padStart(2, '0')}/${String(time.getFullYear())}`],\n\t['LL', (time) => `${months[time.getMonth()]} ${String(time.getDate()).padStart(2, '0')}, ${String(time.getFullYear())}`],\n\t['ll', (time) => `${months[time.getMonth()].slice(0, 3)} ${String(time.getDate()).padStart(2, '0')}, ${String(time.getFullYear())}`],\n\t[\n\t\t'LLL',\n\t\t(time) =>\n\t\t\t`${months[time.getMonth()]} ${String(time.getDate()).padStart(2, '0')}, ${String(time.getFullYear())} ${String(\n\t\t\t\ttime.getHours() % 12 || 12\n\t\t\t)}:${String(time.getMinutes()).padStart(2, '0')} ${time.getHours() < 12 ? 'AM' : 'PM'}`\n\t],\n\t[\n\t\t'lll',\n\t\t(time) =>\n\t\t\t`${months[time.getMonth()].slice(0, 3)} ${String(time.getDate()).padStart(2, '0')}, ${String(time.getFullYear())} ${String(\n\t\t\t\ttime.getHours() % 12 || 12\n\t\t\t)}:${String(time.getMinutes()).padStart(2, '0')} ${time.getHours() < 12 ? 'AM' : 'PM'}`\n\t],\n\t[\n\t\t'LLLL',\n\t\t(time) =>\n\t\t\t`${days[time.getDay()]}, ${months[time.getMonth()]} ${String(time.getDate()).padStart(2, '0')}, ${String(time.getFullYear())} ${String(\n\t\t\t\ttime.getHours() % 12 || 12\n\t\t\t)}:${String(time.getMinutes()).padStart(2, '0')} ${time.getHours() < 12 ? 'AM' : 'PM'}`\n\t],\n\t[\n\t\t'llll',\n\t\t(time) =>\n\t\t\t`${days[time.getDay()].slice(0, 3)} ${months[time.getMonth()].slice(0, 3)} ${String(time.getDate()).padStart(2, '0')}, ${String(\n\t\t\t\ttime.getFullYear()\n\t\t\t)} ${String(time.getHours() % 12 || 12)}:${String(time.getMinutes()).padStart(2, '0')} ${time.getHours() < 12 ? 'AM' : 'PM'}`\n\t],\n\t[\n\t\t'Z',\n\t\t(time) => {\n\t\t\tconst offset = time.getTimezoneOffset();\n\t\t\tconst unsigned = offset >= 0;\n\t\t\tconst absolute = Math.abs(offset);\n\t\t\t/* istanbul ignore next: whether it's signed or unsigned, depends on where the machine is, I cannot control this. */\n\t\t\treturn `${unsigned ? '+' : '-'}${String(Math.floor(absolute / 60)).padStart(2, '0')}:${String(absolute % 60).padStart(2, '0')}`;\n\t\t}\n\t],\n\t[\n\t\t'ZZ',\n\t\t(time) => {\n\t\t\tconst offset = time.getTimezoneOffset();\n\t\t\tconst unsigned = offset >= 0;\n\t\t\tconst absolute = Math.abs(offset);\n\t\t\t/* istanbul ignore next: whether it's signed or unsigned, depends on where the machine is, I cannot control this. */\n\t\t\treturn `${unsigned ? '+' : '-'}${String(Math.floor(absolute / 60)).padStart(2, '0')}:${String(absolute % 60).padStart(2, '0')}`;\n\t\t}\n\t]\n]);\n/* eslint-enable max-len */\n\nexport type TimeResolvable = Date | number | string;\n\nexport interface TimestampTemplateEntry {\n\ttype: string;\n\tcontent: string | null;\n}\n\n/**\n * Timestamp class, parses the pattern once, displays the desired Date or UNIX timestamp with the selected pattern.\n */\nexport class Timestamp {\n\t/**\n\t * The raw pattern\n\t * @since 1.0.0\n\t */\n\tpublic pattern: string;\n\n\t/**\n\t * @since 1.0.0\n\t */\n\tprivate template: TimestampTemplateEntry[];\n\n\t/**\n\t * Starts a new Timestamp and parses the pattern.\n\t * @since 1.0.0\n\t * @param pattern The pattern to parse\n\t */\n\tpublic constructor(pattern: string) {\n\t\tthis.pattern = pattern;\n\t\tthis.template = Timestamp.parse(pattern);\n\t}\n\n\t/**\n\t * Display the current date with the current pattern.\n\t * @since 1.0.0\n\t * @param time The time to display\n\t */\n\tpublic display(time: TimeResolvable = new Date()): string {\n\t\treturn Timestamp.display(this.template, time);\n\t}\n\n\t/**\n\t * Display the current date utc with the current pattern.\n\t * @since 1.0.0\n\t * @param time The time to display in utc\n\t */\n\tpublic displayUTC(time?: TimeResolvable): string {\n\t\treturn Timestamp.display(this.template, Timestamp.utc(time));\n\t}\n\n\t/**\n\t * Edits the current pattern.\n\t * @since 1.0.0\n\t * @param pattern The new pattern for this instance\n\t * @chainable\n\t */\n\tpublic edit(pattern: string): this {\n\t\tthis.pattern = pattern;\n\t\tthis.template = Timestamp.parse(pattern);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Defines the toString behavior of Timestamp.\n\t */\n\tpublic toString(): string {\n\t\treturn this.display();\n\t}\n\n\t/**\n\t * Display the current date with the current pattern.\n\t * @since 1.0.0\n\t * @param pattern The pattern to parse\n\t * @param time The time to display\n\t */\n\tpublic static displayArbitrary(pattern: string, time: TimeResolvable = new Date()): string {\n\t\treturn Timestamp.display(Timestamp.parse(pattern), time);\n\t}\n\n\t/**\n\t * Display the current date utc with the current pattern.\n\t * @since 1.0.0\n\t * @param pattern The pattern to parse\n\t * @param time The time to display\n\t */\n\tpublic static displayUTCArbitrary(pattern: string, time: TimeResolvable = new Date()): string {\n\t\treturn Timestamp.display(Timestamp.parse(pattern), Timestamp.utc(time));\n\t}\n\n\t/**\n\t * Creates a UTC Date object to work with.\n\t * @since 1.0.0\n\t * @param time The date to convert to utc\n\t */\n\tpublic static utc(time: Date | number | string = new Date()): Date {\n\t\ttime = Timestamp.resolveDate(time);\n\t\treturn new Date(time.valueOf() + time.getTimezoneOffset() * 60000);\n\t}\n\n\t/**\n\t * Display the current date with the current pattern.\n\t * @since 1.0.0\n\t * @param template The pattern to parse\n\t * @param time The time to display\n\t */\n\tprivate static display(template: TimestampTemplateEntry[], time: Date | number | string): string {\n\t\tlet output = '';\n\t\tconst parsedTime = Timestamp.resolveDate(time);\n\t\tfor (const { content, type } of template) output += content || tokenResolvers.get(type)!(parsedTime);\n\t\treturn output;\n\t}\n\n\t/**\n\t * Parses the pattern.\n\t * @since 1.0.0\n\t * @param pattern The pattern to parse\n\t */\n\tprivate static parse(pattern: string): TimestampTemplateEntry[] {\n\t\tconst template: TimestampTemplateEntry[] = [];\n\t\tfor (let i = 0; i < pattern.length; i++) {\n\t\t\tlet current = '';\n\t\t\tconst currentChar = pattern[i];\n\t\t\tconst tokenMax = tokens.get(currentChar);\n\t\t\tif (typeof tokenMax === 'number') {\n\t\t\t\tcurrent += currentChar;\n\t\t\t\twhile (pattern[i + 1] === currentChar && current.length < tokenMax) current += pattern[++i];\n\t\t\t\ttemplate.push({ type: current, content: null });\n\t\t\t} else if (currentChar === '[') {\n\t\t\t\twhile (i + 1 < pattern.length && pattern[i + 1] !== ']') current += pattern[++i];\n\t\t\t\ti++;\n\t\t\t\ttemplate.push({ type: 'literal', content: current || '[' });\n\t\t\t} else {\n\t\t\t\tcurrent += currentChar;\n\t\t\t\twhile (i + 1 < pattern.length && !tokens.has(pattern[i + 1]) && pattern[i + 1] !== '[') current += pattern[++i];\n\t\t\t\ttemplate.push({ type: 'literal', content: current });\n\t\t\t}\n\t\t}\n\n\t\treturn template;\n\t}\n\n\t/**\n\t * Resolves a date.\n\t * @since 1.0.0\n\t * @param time The time to parse\n\t */\n\tprivate static resolveDate(time: TimeResolvable): Date {\n\t\treturn time instanceof Date ? time : new Date(time);\n\t}\n}\n"],"names":["TimeTypes","Time","days","months","tokens","Map","partRegex","wildcardRegex","allowedNum","predefined","@annually","@yearly","@monthly","@weekly","@daily","@hourly","cronTokens","jan","feb","mar","apr","may","jun","jul","aug","sep","oct","nov","dec","sun","mon","tue","wed","thu","fri","sat","tokensRegex","RegExp","Object","keys","join","DEFAULT_UNITS","year","1","DEFAULT","month","week","day","hour","minute","second","Cron","[object Object]","cron","this","toLowerCase","normalized","normalize","minutes","hours","dows","parseString","outset","Date","origin","includes","getUTCDate","getUTCMonth","getUTCDay","next","getTime","UTC","getUTCFullYear","now","getUTCHours","getUTCMinutes","Reflect","has","get","split","map","val","i","replace","match","Math","floor","random","toString","String","parts","length","Error","part","parsePart","cronPart","id","res","push","Set","sort","a","b","wild","minStr","maxStr","step","exec","min","max","parseInt","range","t","e","n","Array","fill","r","Duration","pattern","offset","parse","fromNow","dateFrom","date","result","kCommaRegex","kAanRegex","kPatternRegex","_","units","Number","kTimeDurations","DurationFormatter","duration","precision","output","negative","type","timeDuration","substraction","floored","addUnit","time","unit","TimerManager","fn","delay","args","timeout","setTimeout","storedTimeouts","delete","add","clearTimeout","interval","setInterval","storedIntervals","clearInterval","clear","tokenResolvers","getFullYear","slice","getMonth","padStart","getDate","endsWith","getDay","valueOf","getHours","getMinutes","getSeconds","getMilliseconds","getTimezoneOffset","unsigned","absolute","abs","Timestamp","template","display","utc","resolveDate","parsedTime","content","current","currentChar","tokenMax"],"mappings":"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"}